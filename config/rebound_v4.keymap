/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/modifiers.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping_term_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
	behaviors {
        lk: layer_keytap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_KEYTAP";
            #binding-cells = <2>;
            tapping_term_ms = <275>;
            flavor = "tap-preferred";
            bindings = <&to>, <&kp>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
     
// -------------------------------------------------------------------------------------
// |    TAB      |    Q      |   W   |    E          |  R       |    T      |                   |   Y          |    U      |    I      |   O       |   P       |   \   |
// |   1 CAPS    |  A / L1mo |   S   |    D / L2to   | F / L1to |    G      | | OPTION       |  |   H          |  J / L1to |  K / L2to |  L        | ;  L1mo   |  '    |
// |   LSHIFT    | X / LSHIFT|   C   |    V          |  B       |    3      | | CTRL ESC     |  |   N          |    M      |    ,      |   .       | / LSHIFT  | RSHIFT|
// |   moment 1  |    `      |  TO 2 |  LEFT         | BSPACE   |  DELETE   | | CMD SPACE    |  |  ENTER       |    SPACE  |   UP/DOWN |   [       |   ]       |moment1|
//                         					  
		bindings = <
   &kp TAB       &kp Q        &kp W  &kp E           &kp R       &kp T                         &kp Y           &kp U       &kp I       &kp O       &kp P      &kp BSLH
   &kp CAPS      &lt 1 A        &kp S  &lk 2 D       &lk 1 F     &kp G         &hm LCTRL ESC   &kp H           &lk 1 J     &lk 2 K     &KP L       &lt 1 SEMI &lt 1 SQT
   &kp LSHFT     &hm LSHIFT Z &kp X  &kp C           &kp V       &kp B         &kp LALT        &kp N           &kp M       &kp COMMA   &kp DOT     &kp FSLH   &kp RSHFT  
   &mo 1         &kp GRAVE    &to 2  &hm LEFT RIGHT  &kp BSPC    &kp DEL       &hm LGUI SPACE  &kp ENTER       &kp SPACE   &hm UP DOWN &kp LBKT    &kp RBKT   &mo 1   
                       >;
	
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
                };

        nav_layer {
// ----------------------------------------------------------------------------------
// |  =      |  1         |  2        |  3          |  4         |  5        |                  |   6           |   7       |   8       |  9      |   0    |   -    |
// | to L0   |            |  LEFT     |  UP         |  RIGHT     |           |   | OPTION    |  |               | 0 HOME    | PG UP     | PG DN   | END    |        |
// | LSHIFT  |            |           |  DOWN       |            |           |   | CTRL ESC  |  |               |           |   ,       |   .     |   /    | RSHIFT |
// |         |            | TO 0      |             |  BSPACE    |  DELETE   |   | CMD SPACE |  |  ENTER        |    SPACE  |   UP/DOWN |         |        |        | 
//
		bindings = < 
   &kp EQUAL  &kp N1      &kp N2        &kp N3         &kp N4      &kp N5                        &kp N6          &kp N7      &kp N8      &kp N9     &kp N0   &kp MINUS
   &to 0      &none       &kp LEFT      &kp UP         &kp RIGHT   &none         &hm LCTRL ESC   &none           &lk 0 HOME  &kp PG_UP   &kp PG_DN  &kp END  &none
   &kp LSHFT  &none       &none         &kp DOWN       &none       &none         &kp LALT        &none           &none       &kp COMMA   &kp DOT    &kp FSLH &kp RSHFT
   &none      &none       &to 0         &hm LEFT RIGHT &kp BSPC    &kp DEL       &hm LGUI SPACE  &kp ENTER       &kp SPACE   &hm UP DOWN &none      &none    &none
                        >;

			sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
                };

        NumApp_layer {
// -----------------------------------------------------------------------------------------
// | TO DOS            |                     |                       |                     |                     |                     |                |      CLR       |     7     |     8    |     9    |     -      |     รท      |
// |  L0               |                     |             LEFT      |    UP               |  RIGHT / L0         |                     | |  OPTION    | |                |     4     |     5    |     6    |     +      |     *      |
// | LSHIFT            |                     |                       |   DOWN              |                     |                     | |  CTRL ESC  | |                |     1     |     2    |     3    |     =      |            |
// |                   |                     |              L0       |                     |  BSPACE             |       DELETE        | |  CMD SPACE | |     ENTER      |    SPACE  |     0    |     .    |     =      |   BKSPC    |
//                                            
		bindings = <
   &kp LG(LS(LA(KP_N7))) &kp LG(LS(LA(KP_N2)))  &kp LG(LS(LA(KP_N1)))  &kp LG(LS(LA(KP_N4))) &kp LG(LS(LA(KP_N3))) &kp LG(LS(LA(KP_N9)))                  &kp KP_CLEAR     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS  &kp KP_DIVIDE
   &to 0                 &none                &kp LEFT                 &kp UP                &lk 0 RIGHT           &none                 &hm LCTRL ESC    &none            &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS   &kp KP_MULTIPLY
   &kp LSHFT             &none                &none                    &kp DOWN              &none                 &none                 &kp LALT         &none            &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_EQUAL  &none
   &none                 &none                &to 0                    &hm LEFT RIGHT        &kp BSPC              &kp DEL               &hm LGUI SPACE   &kp ENTER        &kp SPACE   &kp KP_N0 &kp KP_DOT &kp KP_EQUAL  &kp BSPC
                        >;

			sensor-bindings = <&inc_dec_kp RIGHT LEFT>;
                };

        new_layer {
// -----------------------------------------------------------------------------------------
// |    -    |     9  |     8  |     7  |    NUM |       |           |       | NUM     |  7       |      8  |      9  |  -   |
// |   +     |     6  |     5  |     4  |     /  |       | |       | |       |      /  |       4  |      5  |      6  |   +  |
// |   =     |     3  |     2  |     1  |     *  |       | |       | |       |      *  |       1  |      2  |      3  |   =  |
// |   RET   |    .   |    0   |    0   |  CLR   |       | |       | |       |    CLR  |    0     |    0    |    .    |  RET | 
//                                            
		bindings = <
   &none     &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3  &bt BT_SEL 4             &out OUT_BLE  &out OUT_USB  &none     &none     &none     &reset   
   &none     &none    &none    &none    &none     &none         &none       &none  &kp N4    &kp N5     &kp N6    &none     &none
   &none     &none    &none    &none    &none     &none         &none       &none  &kp N1    &kp N2     &kp N3    &none     &none
   &none     &none    &none    &kp LA(BSPC)&kp BSPC&kp LC(BSPC) &none       &none  &trans    &kp N0     &none     &none     &none
                        >;

			sensor-bindings = <&inc_dec_kp RIGHT LEFT>;
                };
	};
};
