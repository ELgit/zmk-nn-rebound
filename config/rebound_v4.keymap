/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/modifiers.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping_term_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// -------------------------------------------------------------------------------------
// |    TAB      |    Q      |   W   |    E          |  R     |    T      |                   |   Y          |    U      |    I      |   O       |   P       |   \   |
// |    CAPS     |    A      |   S   |    D          |  F     |    G      | | OPTION       |  |   H          |    J      |    K      |   L       |   ;       |  '    |
// |   LSHIFT    |    X      |   C   |    V          |  B     |    3      | | CTRL ESC     |  |   3          |    N      |    M      |   ,       |   .       |   /   |
// |             |    `      |  LYR1 |  LEFT         | RIGHT  |  DEL BSPC | | CMD SPACE    |  |  ENTER SPACE |    UP     |   DOWN    |   [       |   ]       |       |
//                         					  
		bindings = <
   &kp TAB       &kp Q        &kp W  &kp E           &kp R     &kp T                         &kp Y           &kp U       &kp I       &kp O       &kp P      &kp BSLH
   &kp CAPS      &kp A        &kp S  &kp D           &kp F     &kp G         &kp LALT        &kp H           &kp J       &kp K       &kp L       &kp SEMI   &kp SQT
   &kp LSHFT     &kp Z        &kp X  &kp C           &kp V     &kp B         &hm LCTRL ESC   &kp N           &kp M       &kp COMMA   &kp DOT     &kp FSLH   &kp RSHFT  
   &none         &kp GRAVE    &to 1  &kp LEFT        &kp RIGHT &hm DEL BSPC  &hm LGUI SPACE  &hm ENTER SPACE &kp UP      &kp DOWN    &kp LBKT    &kp RBKT   &none   
                        >;
	
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
                };

        nav_layer {
// ----------------------------------------------------------------------------------
// |  =      |  1       |  2       |  3        |  4        |  5         |                 |  6           |  7         |   8     |  9       |  0     |  -   |
// |         |          | LEFT     |  UP       | RIGHT     |            |   | OPTION |    |              | HOME       | PG UP   | PG DN    |  END   |      |
// |         |          |          | DOWN      |           |            |   |        |    |              |            |         |          |        |      |
// |         |          | LYR0     | CAPS      |  "        |  DEL BSPC  |   |        |    | ENTER SPACE  |            |         |          |        |      | 
//
		bindings = < 
   &kp EQUAL  &kp N1    &kp N2      &kp N3       &kp N4       &kp N5                       &kp N6           &kp N7    &kp N8     &kp N9    &kp N0   &kp MINUS
   &none      &none     &kp LEFT    &kp UP       &kp RIGHT    &none         &kp LALT       &kp HOME         &none     &kp PG_UP  &kp PG_DN &kp END  &none
   &LSHFT     &none     &none       &kp DOWN     &none        &none         &hm LCTRL ESC  &none            &none     &none      &none     &none    &kp RSHFT
   &none      &none     &to 0       &none        &none        &hm DEL BSPC  &hm LGUI SPACE &hm ENTER SPACE  &none     &none      &none     &none    &none
                        >;

			sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
                };

        numdel_layer {
// -----------------------------------------------------------------------------------------
// |  -  |  9  |  8  |  7  | NUM |     |                   |     | NUM |  7  |  8  |  9  |  -  |
// |  +  |  6  |  5  |  4  |  /  |     |     |       |     |     |  /  |  4  |  5  |  6  |  +  |
// |  =  |  3  |  2  |  1  |  *  |     |     |       |     |     |  *  |  1  |  2  |  3  |  =  |
// | RET |  .  |  0  |  0  | CLR |     |     |       |     |     | CLR |  0  |  0  |  .  | RET | 
//                                            
		bindings = <
   &kp GRAVE &none    &none    &none    &none     &none                     &none  &kp N7    &kp N8     &kp N9    &none     &kp EQUAL
   &none     &none    &none    &none    &none     &none         &none       &none  &kp N4    &kp N5     &kp N6    &none     &none
   &trans    &none    &none    &none    &none     &none         &none       &none  &kp N1    &kp N2     &kp N3    &none     &none
   &none     &none    &none    &kp LA(BSPC)&kp BSPC&kp LC(BSPC) &none       &kp COMMA&trans  &kp N0     &none     &none     &none
                        >;

			sensor-bindings = <&inc_dec_kp RIGHT LEFT>;
                };

        new_layer {
// -----------------------------------------------------------------------------------------
// |  -  |  9  |  8  |  7  | NUM |     |                   |     | NUM |  7  |  8  |  9  |  -  |
// |  +  |  6  |  5  |  4  |  /  |     |     |       |     |     |  /  |  4  |  5  |  6  |  +  |
// |  =  |  3  |  2  |  1  |  *  |     |     |       |     |     |  *  |  1  |  2  |  3  |  =  |
// | RET |  .  |  0  |  0  | CLR |     |     |       |     |     | CLR |  0  |  0  |  .  | RET | 
//                                            
		bindings = <
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3  &bt BT_SEL 4             &out OUT_BLE  &out OUT_USB  &none     &none     &none     &reset   
   &none     &none    &none    &none    &none     &none         &none       &none  &kp N4    &kp N5     &kp N6    &none     &none
   &none     &none    &none    &none    &none     &none         &none       &none  &kp N1    &kp N2     &kp N3    &none     &none
   &none     &none    &none    &kp LA(BSPC)&kp BSPC&kp LC(BSPC) &none       &none  &trans    &kp N0     &none     &none     &none
                        >;

			sensor-bindings = <&inc_dec_kp RIGHT LEFT>;
                };
	};
};
